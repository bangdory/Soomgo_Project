<?xml version="1.0" encoding="UTF-8"?>
<!-- Mapping 설정은 root-context 에서 mybatis property 추가할 것-->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.soomgo.soomgo_project.mappers.request.RequestMapper">
    <insert id="insert" parameterType="RequestDTO">
        <selectKey order="AFTER" keyProperty="id" resultType="int">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into request (userNum, regDate, categoryNum, typeNum, sub, file1, file2, cr, amount, addService, result,
        day,
        time,
        age, sex, fav, place, date, regionNum, ref)
        values (#{userNum}, #{regDate}, #{categoryNum}, #{typeNum}, #{sub}, #{file1}, #{file2}, #{cr}, #{amount},
        #{addService},
        #{result}, #{day}, #{time}, #{age},
        #{sex}, #{fav}, #{place}, #{date}, #{regionNum}, #{ref})
    </insert>

    <select id="getListByClientNo" parameterType="int" resultType="RequestVO">
        <!--        select * from test where id > 0 order by id desc-->
        select r.id,
        c.CategoryName typeName,
        LENGTH(r.expertNum) - LENGTH(REPLACE(r.expertNum, ',', '')) + 1 experts,
        u.user_name,
        r.userNum,
        r.typeNum,
        r.sub,
        r.file1,
        r.file2,
        r.cr,
        r.amount,
        r.addService,
        r.regDate,
        r.result,
        r.day,
        r.time,
        r.age,
        r.sex,
        r.fav,
        r.place,
        r.date,
        r.ref refFromClient,
        r.deleted
        from request r
        inner join user u on u.user_num = r.userNum
        inner join category c on c.CategoryNum = r.typeNum
        where r.userNum = #{clientId} order by regDate DESC, deleted ASC
    </select>

    <select id="select" parameterType="int" resultType="RequestDTO">
        <!--        select * from test where id = #{id}-->
        select * from request where id = #{id}
        <!--        select t.district,-->
        <!--        c.CategoryName,-->
        <!--        r.*-->
        <!--        from territory t,-->
        <!--        category c-->
        <!--        inner join request r on r.id = #{requestId}-->
        <!--        where t.no = r.regionNum-->
        <!--        and c.CategoryNum = r.typeNum-->
    </select>

    <resultMap id="selectedRequestDetail" type="RequestVO">
        <id property="id" column="id"/>
        <result property="regionName" column="district"/>
        <result property="typeName" column="CategoryName"/>
        <result property="userName" column="user_name"/>
        <result property="experts" column="experts"/>
        <result property="sub" column="sub"/>
        <result property="file1" column="file1"/>
        <result property="file2" column="file2"/>
        <result property="amount" column="amount"/>
        <result property="addService" column="addService"/>
        <result property="result" column="result"/>
        <result property="day" column="day"/>
        <result property="time" column="time"/>
        <result property="age" column="age"/>
        <result property="sex" column="sex"/>
        <result property="fav" column="fav"/>
        <result property="place" column="place"/>
        <result property="date" column="date"/>
        <!--        <result property="regionNum" column="regionNum"/>-->
        <result property="regionName" column="ref"/>
        <result property="deleted" column="deleted"/>
    </resultMap>

    <select id="selectedRequest" parameterType="int" resultMap="selectedRequestDetail">
        select t.district,
        c.CategoryName,
        u.user_name,
        LENGTH(r.expertNum) - LENGTH(REPLACE(r.expertNum, ',', '')) + 1 experts,
        r.*
        from request r
        inner join
        territory t on t.no = r.regionNum
        inner join
        category c on c.CategoryNum = r.typeNum
        inner join
        user u on u.user_num = r.userNum
        where r.id = #{requestId}
    </select>

    <!--    <select id="answeredRequest" parameterType="int" resultType="AnswerRequestVO">-->
    <!-- 개별 데이터 조회용, 작성할 것-->
    <!--    </select>-->
    <select id="readRequestByExpertNum" parameterType="int" resultType="RequestVO">
        <!--   SELECT r.*
           FROM request r
           INNER JOIN expert e
           ON r.regionNum = e.region
           AND r.typeNum = e.category_num
           WHERE e.expert_num = ${expertNum}
           ORDER BY r.regDate DESC-->
        SELECT u.user_name userName,
        <!--        u2.user_name expertName,-->
        c.CategoryName typeName,
        t.district regionName,
        r.*
        FROM request r
        INNER JOIN expert e
        ON r.regionNum = e.region
        AND r.typeNum = e.category_num
        inner join user u on u.user_num = r.userNum
        <!--        inner join user u2 on u2.user_num = e.expert_Num-->
        inner join category c on c.CategoryNum = r.categoryNum
        inner join territory t on t.no = r.regionNum
        WHERE e.expert_num = #{expertNum}
        ORDER BY r.regDate DESC
    </select>

    <resultMap id="answeredListFromExpert" type="AnswerRequestVO">
        <id property="id" column="id"/>
        <result property="requestId" column="RequestId"/>
        <result property="userNum" column="userNum"/>
        <result property="userName" column="clientName"/>
        <result property="expertNum" column="expert_num"/>
        <result property="expertName" column="expertName"/>
        <result property="replyDate" column="replyDate"/>
        <result property="typeNum" column="typeNum"/>
        <result property="typeName" column="CategoryName"/>
        <result property="sub" column="sub"/>
        <result property="file1" column="file1"/>
        <result property="file2" column="file2"/>
        <result property="amount" column="amount"/>
        <result property="addService" column="addService"/>
        <result property="result" column="result"/>
        <result property="day" column="day"/>
        <result property="time" column="time"/>
        <result property="age" column="age"/>
        <result property="sex" column="sex"/>
        <result property="fav" column="fav"/>
        <result property="place" column="place"/>
        <result property="date" column="date"/>
        <result property="regionNum" column="regionNum"/>
        <result property="regionName" column="district"/>
        <result property="refFromClient" column="r.ref"/>
        <result property="price" column="price"/>
        <result property="refFromExpert" column="a.ref"/>
        <result property="fileFromExpert" column="file"/>
    </resultMap>

    <select id="answeredRequestByExpertNum" parameterType="int" resultMap="answeredListFromExpert">
        <!--        SELECT r.*-->
        <!--        FROM request r-->
        <!--        INNER JOIN expert e-->
        <!--        ON r.expertNum = (select u.user_name from user u where u.user_num = e.user_num)-->
        <!--        AND r.typeNum = (select c.CategoryName from category c where c.CategoryNum = e.category_num)-->
        <!--        WHERE e.expert_num = #{expertNum}-->
        <!--        ORDER BY r.regDate DESC-->
        select a.id,
        a.RequestId,
        r.userNum,
        u.user_name clientName,
        e.expert_num,
        u2.user_name expertName,
        a.replyDate,
        r.typeNum,
        c.CategoryName,
        r.sub,
        r.file1,
        r.file2,
        r.amount,
        r.addService,
        r.result,
        r.day,
        r.time,
        r.age,
        r.sex,
        r.fav,
        r.place,
        r.date,
        r.regionNum,
        t.district,
        r.ref,
        a.price,
        a.ref,
        a.file
        from request r
        inner join
        answerrequest a on a.RequestId = r.id
        inner join
        user u on u.user_num = r.userNum
        inner join
        user u2 on u2.user_num = a.expertNum
        inner join
        expert e on e.expert_num = a.expertNum
        inner join
        category c on c.CategoryNum = r.typeNum
        inner join
        territory t on t.no = r.regionNum
        where a.expertNum = #{expertNum}

    </select>

    <resultMap id="AnswerRequestVOMap" type="AnswerRequestVO">
        <id property="id" column="id"/>
        <result property="requestId" column="RequestId"/>
        <result property="expertNum" column="expertNum"/>
        <result property="expertName" column="user_name"/>
        <result property="price" column="price"/>
        <result property="fileFromExpert" column="file"/>
        <result property="refFromExpert" column="refFromExpert"/>
        <result property="connected" column="connected"/>
        <result property="userNum" column="userNum"/>
        <result property="typeNum" column="typeNum"/>
        <result property="subType" column="sub"/>
        <result property="file1" column="file1"/>
        <result property="file2" column="file2"/>
        <result property="amount" column="amount"/>
        <result property="addService" column="addService"/>
        <result property="result" column="result"/>
        <result property="day" column="day"/>
        <result property="time" column="time"/>
        <result property="age" column="age"/>
        <result property="sex" column="sex"/>
        <result property="fav" column="fav"/>
        <result property="place" column="place"/>
        <result property="date" column="date"/>
        <result property="date" column="refFromClient"/>
        <result property="deleted" column="deleted"/>
    </resultMap>

    <!-- 0908 견적이 달린 요청서 확인 (고객용) -->
    <select id="answerListOfSelectedRequest" parameterType="int" resultMap="AnswerRequestVOMap">
        select a.id,
        a.RequestId,
        a.expertNum,
        u.user_name,
        a.price,
        a.file,
        a.ref refFromExpert,
        a.replyDate,
        a.connected,
        r.userNum,
        r.typeNum,
        r.sub,
        r.file1,
        r.file2,
        r.cr,
        r.amount,
        r.addService,
        r.result,
        r.day,
        r.time,
        r.age,
        r.sex,
        r.fav,
        r.place,
        r.date,
        r.ref refFromClient,
        r.deleted
        from answerrequest a
        inner join request r on a.requestId = r.id
        inner join user u on u.user_num = a.expertNum
        where a.requestId = #{requestId}
    </select>

    <resultMap id="findExpertVO" type="ExpertVO">
        <id property="expertNum" column="expert_num"/>
        <result property="userNum" column="user_num"/>
        <result property="expertName" column="user_name"/>
        <result property="categoryNum" column="category_num"/>
        <result property="categoryName" column="CategoryName"/>
        <result property="experienceYears" column="experience_years"/>
        <result property="education" column="education"/>
        <result property="rating" column="rating"/>
        <result property="regionNum" column="region"/>
        <result property="regionName" column="district"/>
        <result property="img" column="img"/>
    </resultMap>
    <select id="findExpert" parameterType="int" resultMap="findExpertVO">
        select e.expert_num,
        u.user_num,
        u.user_name,
        e.category_num,
        c.CategoryName,
        e.experience_years,
        e.education,
        e.rating,
        e.region,
        t.district,
        e.img
        from expert e
        inner join user u
        on u.user_num = e.user_num
        inner join territory t
        on t.no = e.region
        inner join category c
        on c.CategoryNum = e.category_num
        where e.user_num = #{expertNum}
    </select>
    <select id="expert" parameterType="int" resultType="ExpertVO">
        select u.user_name expertName, t.district regionName, c.CategoryName, e.*
        from expert e
        inner join user u on e.user_num = u.user_num
        inner join category c on c.CategoryNum = e.category_num
        inner join territory t on t.no = e.region
        where e.expert_num = #{expertNum}
    </select>

    <select id="findAllStates" resultType="string">
        SELECT DISTINCT state
        FROM territory;
    </select>

    <select id="findTerritoryByState" parameterType="String" resultType="TerritoryDTO">
        <!--SELECT district
        FROM territory
        WHERE id IN (
        SELECT id
        FROM territory
        WHERE state = #{state}
        ) AND district IS NOT NULL;-->
        SELECT no, id, state, district
        FROM territory
        WHERE id IN (
        SELECT id
        FROM territory
        WHERE state = #{state}
        ) AND district IS NOT NULL;
    </select>

    <select id="findAllCategory" resultType="String">
        SELECT CategoryName from category where P_Id is null order by id
    </select>
    <select id="findType" resultType="CategoryDTO" parameterType="String">
        SELECT CategoryNum, Id, P_Id, CategoryName
        FROM category
        WHERE CategoryName IN (
        SELECT CategoryName
        FROM category
        WHERE P_Id = (
        SELECT Id
        FROM category
        WHERE CategoryName = #{type}
        )
        AND P_Id IS NOT NULL
        )
    </select>

    <select id="selectedType" resultType="CategoryDTO" parameterType="int">
        SELECT CategoryNum, Id, P_Id, CategoryName
        FROM category
        WHERE CategoryNum = #{categoryNum}
    </select>


    <update id="deleteRequestFromClient" parameterType="int">
        update request r set r.deleted = true where r.id = #{requestId}
    </update>

<!--
삭제된 요청서 읽기 -> selectedRequestDetail 사용할 것
    <resultMap id="deletedSingleRequest" type="RequestVO">
        <id property="id" column="id"/>
        <result property="userNum" column="userNum"/>
        <result property="userName" column="user_name"/>
        <result property="experts" column="experts"/>
        <result property="typeNum" column="typeNum"/>
        <result property="sub" column="sub"/>
        <result property="file1" column="file1"/>
        <result property="file2" column="file2"/>
        <result property="amount" column="amount"/>
        <result property="addService" column="addService"/>
        <result property="result" column="result"/>
        <result property="day" column="day"/>
        <result property="time" column="time"/>
        <result property="age" column="age"/>
        <result property="sex" column="sex"/>
        <result property="fav" column="fav"/>
        <result property="place" column="place"/>
        <result property="date" column="date"/>
        <result property="ref" column="refFromClient"/>
        <result property="deleted" column="deleted"/>
    </resultMap>

    <select id="deletedRequestByClient" parameterType="int" resultMap="deletedSingleRequest">
        select r.id,
        LENGTH(r.expertNum) - LENGTH(REPLACE(r.expertNum, ',', '')) + 1 experts,
        u.user_name,
        r.userNum,
        r.typeNum,
        r.sub,
        r.file1,
        r.file2,
        r.cr,
        r.amount,
        r.addService,
        r.result,
        r.day,
        r.time,
        r.age,
        r.sex,
        r.fav,
        r.place,
        r.date,
        r.ref refFromClient,
        r.deleted
        from answerrequest a
        inner join request r on a.requestId = r.id
        inner join user u on u.user_num = r.userNum
        where a.requestId = #{requestId}
    </select>
-->
</mapper>