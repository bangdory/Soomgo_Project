<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 웹과 관련된 설정은 분리할 것 -->
    <!-- service 라는 새로운 패키지에서 @Component 인식을 하기 위해 -->
    <context:component-scan base-package="org.soomgo.soomgo_project.service"/>

    <bean name="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/soomgodb"/>
        <property name="username" value="root"/>
        <property name="password" value="1234"/>
        <property name="connectionTimeout" value="30000"/>
        <property name="minimumIdle" value="2"/>
    </bean>

    <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
        <constructor-arg ref="hikariConfig"/>
    </bean>

    <bean class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!-- classpath 는 resources 경로를 가르킴, 그 하위의 mappers 폴더 내 모든 xml 파일은 mybatis 에서 쓰는 xml 파일이다-->
        <property name="mapperLocations" value="classpath:mappers/*.xml"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 스프링 마이바티스가 이 패키지를 조사해라 -->
    <mybatis-spring:scan base-package="org.soomgo.soomgo_project.mappers"/>

    <!-- 자동으로 프록시를 만들것이라는 설정 -->
    <aop:aspectj-autoproxy/>
    <!-- tx -> AOP 설정만 걸어주면 별도의 코드 없이 Transaction 코드를 씌울 수 있음 -->
    <tx:annotation-driven/>
</beans>